void redMemoryGetBudget(RedContext context, RedHandleGpu gpu, RedMemoryBudget* outMemoryBudget, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redMemoryAllocate(RedContext context, RedHandleGpu gpu, char* handleName, uint64_t bytesCount, unsigned memoryTypeIndex, RedHandleArray dedicateToArray, RedHandleImage dedicateToImage, unsigned memoryBitflags, RedHandleMemory* outMemory, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redMemoryAllocateMappable(RedContext context, RedHandleGpu gpu, char* handleName, RedBool32 dedicate, RedHandleArray array, uint64_t arrayMemoryBytesCount, unsigned memoryTypeIndex, unsigned memoryBitflags, RedHandleMemory* outMemory, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redMemoryFree(RedContext context, RedHandleGpu gpu, RedHandleMemory memory, char* optionalFile, int optionalLine, void* optionalUserData)
void redMemorySet(RedContext context, RedHandleGpu gpu, unsigned memoryArraysCount, RedMemoryArray* memoryArrays, unsigned memoryImagesCount, RedMemoryImage* memoryImages, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redMemoryMap(RedContext context, RedHandleGpu gpu, RedHandleMemory mappableMemory, uint64_t mappableMemoryBytesFirst, uint64_t mappableMemoryBytesCount, void** outVolatilePointer, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redMemoryUnmap(RedContext context, RedHandleGpu gpu, RedHandleMemory mappableMemory, char* optionalFile, int optionalLine, void* optionalUserData)
void redMemoryNonCoherentFlush(RedContext context, RedHandleGpu gpu, unsigned mappableMemoryRangesCount, RedMappableMemoryRange* mappableMemoryRanges, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redMemoryNonCoherentInvalidate(RedContext context, RedHandleGpu gpu, unsigned mappableMemoryRangesCount, RedMappableMemoryRange* mappableMemoryRanges, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redStructsMemoryAllocate(RedContext context, RedHandleGpu gpu, char* handleName, unsigned maxStructsCount, unsigned maxStructsMembersOfTypeArrayROConstantCount, unsigned maxStructsMembersOfTypeArrayROOrArrayRWCount, unsigned maxStructsMembersOfTypeTextureROCount, unsigned maxStructsMembersOfTypeTextureRWCount, RedHandleStructsMemory* outStructsMemory, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redStructsMemoryAllocateSamplers(RedContext context, RedHandleGpu gpu, char* handleName, unsigned maxStructsCount, unsigned maxStructsMembersOfTypeSamplerCount, RedHandleStructsMemory* outStructsMemory, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redStructsMemorySuballocateStructs(RedContext context, RedHandleGpu gpu, char** handleNames, RedHandleStructsMemory structsMemory, unsigned structsDeclarationsCount, RedHandleStructDeclaration* structsDeclarations, RedHandleStruct* outStructs, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redStructsMemoryReset(RedContext context, RedHandleGpu gpu, RedHandleStructsMemory structsMemory, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redStructsMemoryFree(RedContext context, RedHandleGpu gpu, RedHandleStructsMemory structsMemory, char* optionalFile, int optionalLine, void* optionalUserData)
void redStructsSet(RedContext context, RedHandleGpu gpu, unsigned structsMembersCount, RedStructMember* structsMembers, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateContext(RedTypeProcedureMalloc malloc, RedTypeProcedureFree free, RedTypeProcedureMallocTagged optionalMallocTagged, RedTypeProcedureFreeTagged optionalFreeTagged, RedTypeProcedureDebugCallback debugCallback, RedSdkVersion sdkVersion, unsigned sdkExtensionsCount, unsigned* sdkExtensions, char* optionalProgramName, unsigned optionalProgramVersion, char* optionalEngineName, unsigned optionalEngineVersion, void* optionalSettings, RedContext* outContext, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateArray(RedContext context, RedHandleGpu gpu, char* handleName, RedArrayType type, uint64_t bytesCount, uint64_t structuredBufferElementBytesCount, RedAccessBitflags initialAccess, unsigned initialQueueFamilyIndex, RedBool32 dedicate, RedArray* outArray, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateImage(RedContext context, RedHandleGpu gpu, char* handleName, RedImageDimensions dimensions, RedFormat format, unsigned width, unsigned height, unsigned depth, unsigned levelsCount, unsigned layersCount, RedMultisampleCountBitflag multisampleCount, RedAccessBitflags restrictToAccess, RedAccessBitflags initialAccess, unsigned initialQueueFamilyIndex, RedBool32 dedicate, RedImage* outImage, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateSampler(RedContext context, RedHandleGpu gpu, char* handleName, RedSamplerFiltering filteringMag, RedSamplerFiltering filteringMin, RedSamplerFilteringMip filteringMip, RedSamplerBehaviorOutsideTextureCoordinate behaviorOutsideTextureCoordinateU, RedSamplerBehaviorOutsideTextureCoordinate behaviorOutsideTextureCoordinateV, RedSamplerBehaviorOutsideTextureCoordinate behaviorOutsideTextureCoordinateW, float mipLodBias, RedBool32 enableAnisotropy, float maxAnisotropy, RedBool32 enableCompare, RedCompareOp compareOp, float minLod, float maxLod, RedHandleSampler* outSampler, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateTexture(RedContext context, RedHandleGpu gpu, char* handleName, RedHandleImage image, RedImagePartBitflags parts, RedTextureDimensions dimensions, RedFormat format, unsigned levelsFirst, unsigned levelsCount, unsigned layersFirst, unsigned layersCount, RedAccessBitflags restrictToAccess, RedHandleTexture* outTexture, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateGpuCode(RedContext context, RedHandleGpu gpu, char* handleName, uint64_t irBytesCount, void* ir, RedHandleGpuCode* outGpuCode, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateOutputDeclaration(RedContext context, RedHandleGpu gpu, char* handleName, RedOutputDeclarationMembers* outputDeclarationMembers, RedOutputDeclarationMembersResolveSources* outputDeclarationMembersResolveSources, RedBool32 dependencyByRegion, RedBool32 dependencyByRegionAllowUsageAliasOrderBarriers, RedHandleOutputDeclaration* outOutputDeclaration, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateStructDeclaration(RedContext context, RedHandleGpu gpu, char* handleName, unsigned structDeclarationMembersCount, RedStructDeclarationMember* structDeclarationMembers, unsigned structDeclarationMembersArrayROCount, RedStructDeclarationMemberArrayRO* structDeclarationMembersArrayRO, RedBool32 procedureParametersHandlesDeclaration, RedHandleStructDeclaration* outStructDeclaration, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateProcedureParameters(RedContext context, RedHandleGpu gpu, char* handleName, RedProcedureParametersDeclaration* procedureParametersDeclaration, RedHandleProcedureParameters* outProcedureParameters, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateProcedureCache(RedContext context, RedHandleGpu gpu, char* handleName, uint64_t fromBlobBytesCount, void* fromBlob, RedHandleProcedureCache* outProcedureCache, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateProcedure(RedContext context, RedHandleGpu gpu, char* handleName, RedHandleProcedureCache procedureCache, RedHandleOutputDeclaration outputDeclaration, RedHandleProcedureParameters procedureParameters, char* gpuCodeVertexMainProcedureName, RedHandleGpuCode gpuCodeVertex, char* gpuCodeFragmentMainProcedureName, RedHandleGpuCode gpuCodeFragment, RedProcedureState* state, void* stateExtension, RedBool32 deriveBase, RedHandleProcedure deriveFrom, RedHandleProcedure* outProcedure, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateProcedureCompute(RedContext context, RedHandleGpu gpu, char* handleName, RedHandleProcedureCache procedureCache, RedHandleProcedureParameters procedureParameters, char* gpuCodeMainProcedureName, RedHandleGpuCode gpuCode, RedHandleProcedure* outProcedure, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateOutput(RedContext context, RedHandleGpu gpu, char* handleName, RedHandleOutputDeclaration outputDeclaration, RedOutputMembers* outputMembers, RedOutputMembersResolveTargets* outputMembersResolveTargets, unsigned width, unsigned height, RedOutput* outOutput, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateCpuSignal(RedContext context, RedHandleGpu gpu, char* handleName, RedBool32 createSignaled, RedHandleCpuSignal* outCpuSignal, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateGpuSignal(RedContext context, RedHandleGpu gpu, char* handleName, RedHandleGpuSignal* outGpuSignal, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateGpuToCpuSignal(RedContext context, RedHandleGpu gpu, char* handleName, RedHandleGpuToCpuSignal* outGpuToCpuSignal, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateCalls(RedContext context, RedHandleGpu gpu, char* handleName, unsigned queueFamilyIndex, RedCalls* outCalls, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCreateCallsReusable(RedContext context, RedHandleGpu gpu, char* handleName, unsigned queueFamilyIndex, RedCalls* outCalls, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyContext(RedContext context, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyArray(RedContext context, RedHandleGpu gpu, RedHandleArray array, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyImage(RedContext context, RedHandleGpu gpu, RedHandleImage image, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroySampler(RedContext context, RedHandleGpu gpu, RedHandleSampler sampler, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyTexture(RedContext context, RedHandleGpu gpu, RedHandleTexture texture, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyGpuCode(RedContext context, RedHandleGpu gpu, RedHandleGpuCode gpuCode, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyOutputDeclaration(RedContext context, RedHandleGpu gpu, RedHandleOutputDeclaration outputDeclaration, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyStructDeclaration(RedContext context, RedHandleGpu gpu, RedHandleStructDeclaration structDeclaration, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyProcedureParameters(RedContext context, RedHandleGpu gpu, RedHandleProcedureParameters procedureParameters, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyProcedureCache(RedContext context, RedHandleGpu gpu, RedHandleProcedureCache procedureCache, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyProcedure(RedContext context, RedHandleGpu gpu, RedHandleProcedure procedure, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyOutput(RedContext context, RedHandleGpu gpu, RedHandleOutput output, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyCpuSignal(RedContext context, RedHandleGpu gpu, RedHandleCpuSignal cpuSignal, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyGpuSignal(RedContext context, RedHandleGpu gpu, RedHandleGpuSignal gpuSignal, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyGpuToCpuSignal(RedContext context, RedHandleGpu gpu, RedHandleGpuToCpuSignal gpuToCpuSignal, char* optionalFile, int optionalLine, void* optionalUserData)
void redDestroyCalls(RedContext context, RedHandleGpu gpu, RedHandleCalls calls, RedHandleCallsMemory callsMemory, char* optionalFile, int optionalLine, void* optionalUserData)
void redProcedureCacheGetBlob(RedContext context, RedHandleGpu gpu, RedHandleProcedureCache procedureCache, uint64_t* outBlobBytesCount, void* outBlob, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redProcedureCacheMergeCaches(RedContext context, RedHandleGpu gpu, unsigned sourceProcedureCachesCount, RedHandleProcedureCache* sourceProcedureCaches, RedHandleProcedureCache targetProcedureCache, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCpuSignalGetStatus(RedContext context, RedHandleGpu gpu, RedHandleCpuSignal cpuSignal, RedStatus* outStatus, char* optionalFile, int optionalLine, void* optionalUserData)
void redCpuSignalWait(RedContext context, RedHandleGpu gpu, unsigned cpuSignalsCount, RedHandleCpuSignal* cpuSignals, RedBool32 waitAll, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCpuSignalUnsignal(RedContext context, RedHandleGpu gpu, unsigned cpuSignalsCount, RedHandleCpuSignal* cpuSignals, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redGpuToCpuSignalGetStatus(RedContext context, RedHandleGpu gpu, RedHandleGpuToCpuSignal gpuToCpuSignal, RedStatus* outStatus, char* optionalFile, int optionalLine, void* optionalUserData)
void redGpuToCpuSignalUnsignal(RedContext context, RedHandleGpu gpu, RedHandleGpuToCpuSignal gpuToCpuSignal, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCallsSet(RedContext context, RedHandleGpu gpu, RedHandleCalls calls, RedHandleCallsMemory callsMemory, RedBool32 callsReusable, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCallsEnd(RedContext context, RedHandleGpu gpu, RedHandleCalls calls, RedHandleCallsMemory callsMemory, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redGetCallProceduresAndAddresses(RedContext context, RedHandleGpu gpu, RedCallProceduresAndAddresses* outCallProceduresAndAddresses, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redCallSetDynamicViewport(RedTypeProcedureAddressCallSetDynamicViewport address, RedHandleCalls calls, float x, float y, float width, float height, float depthMin, float depthMax)
void redCallSetDynamicScissor(RedTypeProcedureAddressCallSetDynamicScissor address, RedHandleCalls calls, int x, int y, unsigned width, unsigned height)
void redCallSetStructsMemory(RedTypeProcedureAddressCallSetStructsMemory address, RedHandleCalls calls, RedHandleStructsMemory structsMemory, RedHandleStructsMemory structsMemorySamplers)
void redCallSetProcedureParameters(RedTypeProcedureAddressCallSetProcedureParameters address, RedHandleCalls calls, RedProcedureType procedureType, RedHandleProcedureParameters procedureParameters)
void redCallSetProcedureOutput(RedTypeProcedureAddressCallSetProcedureOutput address, RedHandleCalls calls, RedHandleOutputDeclaration outputDeclaration, RedHandleOutput output, RedInlineOutput* inlineOutput, unsigned outputWidth, unsigned outputHeight, RedBool32 outputDepthStencilEnable, unsigned outputColorsCount, float depthClearValue, unsigned stencilClearValue, RedColorsClearValuesFloat* colorsClearValuesFloat, RedColorsClearValuesSint* colorsClearValuesSint, RedColorsClearValuesUint* colorsClearValuesUint)
void redCallEndProcedureOutput(RedTypeProcedureAddressCallEndProcedureOutput address, RedHandleCalls calls)
void redCallUsageAliasOrderBarrier(RedTypeProcedureAddressCallUsageAliasOrderBarrier address, RedHandleCalls calls, RedContext context, unsigned arrayUsagesCount, RedUsageArray* arrayUsages, unsigned imageUsagesCount, RedUsageImage* imageUsages, unsigned aliasesCount, RedAlias* aliases, unsigned ordersCount, RedOrder* orders, RedBool32 dependencyByRegion)
void redCallMark(RedTypeProcedureAddressCallMark address, RedHandleCalls calls, char* mark)
void redCallMarkSet(RedTypeProcedureAddressCallMarkSet address, RedHandleCalls calls, char* mark)
void redCallMarkEnd(RedTypeProcedureAddressCallMarkEnd address, RedHandleCalls calls)
void redQueueSubmit(RedContext context, RedHandleGpu gpu, RedHandleQueue queue, unsigned timelinesCount, RedGpuTimeline* timelines, RedHandleCpuSignal signalCpuSignal, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redMark(char* mark, char* optionalFile, int optionalLine, void* optionalUserData)
void redMarkSet(char* mark, char* optionalFile, int optionalLine, void* optionalUserData)
void redMarkEnd(char* optionalFile, int optionalLine, void* optionalUserData)
void redStructsMemoryAllocateWithInlineSamplers(RedContext context, RedHandleGpu gpu, char* handleName, unsigned maxStructsCount, unsigned maxStructsMembersOfTypeArrayROConstantCount, unsigned maxStructsMembersOfTypeArrayROOrArrayRWCount, unsigned maxStructsMembersOfTypeTextureROCount, unsigned maxStructsMembersOfTypeTextureRWCount, unsigned maxStructsMembersOfTypeInlineSamplerCount, RedHandleStructsMemory* outStructsMemory, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)
void redStructsMemoryAllocateSamplersWithInlineSamplers(RedContext context, RedHandleGpu gpu, char* handleName, unsigned maxStructsCount, unsigned maxStructsMembersOfTypeSamplerCount, unsigned maxStructsMembersOfTypeInlineSamplerCount, RedHandleStructsMemory* outStructsMemory, RedStatuses* outStatuses, char* optionalFile, int optionalLine, void* optionalUserData)